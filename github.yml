#!/usr/bin/env ansible-playbook
---
- name: push role to galaxy
  hosts: localhost
  become: no
  gather_facts: no
  gather_subset:
    - min

  vars:
    update_git_tag: true
    # git_remote: https://github.com/buluma/ansible-role-git_tag
    git_repo_location: .
    # git_remote: origin

  vars_files:
    - vars/main.yml
    # - vars/vault.yml

  tasks:
    - name: set role_path and role_name
      set_fact:
        role_path: "{{ lookup('env', 'PWD') }}"
        role_name: "{{ lookup('env', 'PWD') | basename | regex_replace('ansible-role-') }}"

    - name: set remote path
      set_fact:
        git_remote: "https://github.com/buluma/ansible-role-{{ role_name }}"

    - name: pull remote
      command: "git pull"
      args:
        warn: false
        chdir: "{{ role_path }}"
      when: "git_remote != '' and git_remote != None"
      register: git_pull

    - name: Check git status
      command: "git status"
      args:
        warn: false
        # chdir: "{{ git_repo_location }}"
        chdir: "{{ role_path }}"
      when: "git_remote != '' and git_remote != None"
      register: git_status

    - name: Stage changes
      command: "git add ."
      args:
        warn: false
        chdir: "{{ role_path }}"
      # when: "git_remote != '' and git_remote != None"
      register: git_add

    # Push changes
    - name: Push changes
      command: "git push"
      args:
        warn: false
        chdir: "{{ role_path }}"
      # when: "git_remote != '' and git_remote != None"
      register: git_push
    # - name: push manually
    #   shell: "set -o pipefail ; git push {{ git_remote }}"
    #   register: create_tag
    - name: debug git_push
      debug:
        msg: "{{ git_push | list }}"

    # - name: Fetch existing tags
    #   command: "git fetch {{git_remote}} --tags"
    #   args:
    #     warn: false
    #     chdir: "{{git_repo_location}}"
    #   when: "git_remote != '' and git_remote != None"
    #   register: git_tag
    #
    # - debug:
    #     msg: "{{ git_tag }}"
    #
    # # - name: check manually
    # #   shell: "set -o pipefail ; git fetch https://github.com/buluma/ansible-role-git_tag --tags"
    # #   register: git_tag
    #
    # - name: Check for existing tag
    #   command: "git rev-parse --verify -q --short {{git_tag}}"
    #   ignore_errors: True
    #   args:
    #     warn: false
    #     chdir: "{{git_repo_location}}"
    #   register: existing_tag
    #
    # - name: Check for tag matching pattern
    #   command: "git describe --match \"{{ skip_if_tag_matching }}\" --tags --exact-match"
    #   args:
    #     warn: false
    #     chdir: "{{git_repo_location}}"
    #   when: skip_if_tag_matching is defined
    #   ignore_errors: True
    #   register: matching_tags
    #
    # - name: Check current HEAD
    #   command: "git rev-parse --verify -q --short HEAD"
    #   args:
    #     warn: false
    #     chdir: "{{git_repo_location}}"
    #   register: current_head
    #
    # - name: Existing tag clashes
    #   debug:
    #     msg: "current head: {{current_head.stdout}}, existing tag: {{existing_tag.stdout}}"
    #   failed_when: True
    #   when: existing_tag.stdout.strip() and existing_tag.stdout.strip() != current_head.stdout.strip() and not update_git_tag
    #
    # # - name: Create Git tag
    # #   # command: "git tag {%if update_git_tag %}--force{% endif %} {{git_tag}}"
    # #   command: "git tag {{git_tag}}"
    # #   args:
    # #     warn: false
    # #     chdir: "{{git_repo_location}}"
    # #   # when: existing_tag.stdout.strip() != current_head.stdout.strip() and (matching_tags.get('skipped') or not matching_tags.stdout_lines)
    # #   register: create_tag
    #
    # - name: push manually
    #   shell: "set -o pipefail ; git push https://github.com/buluma/ansible-role-git_tag --tags"
    #   register: create_tag
    # - name: debug create
    #   debug:
    #     msg: "{{ create_tag | list }}"
